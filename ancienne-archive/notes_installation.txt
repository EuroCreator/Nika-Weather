
Ces pages web permettent de se connecter à un "Broker MQTT" ( Serveur de données qui distribue les données
 qu'il reçoit aux clients abonnés)

Ici les données du graphe sont lues dans un fichier donnees.csv

Ce fichier donnees csv est obtenu par un programme python qui se connecte au serveur mqtt et enregistre les données dans ce fichier csv 
(format excel mais choisir dans excel le séparateur . (point) à la place de virgule)

Le programme python qui permet d'enregistrer les données est : MeteoDataLogger.py

Pour afficher le graphe (données lues dans un fichier) il est impératif de lancer un server web !
Dans la console de votre ordinateur pour lancer le  serveur web tapez :
py -m http.server 80 ( si le port 80 n'est pas disponible sur votre ordinateur choisissez en un autre : 90 par exemple)

Ouvrez ensuite la page dans votre navigateur :
http://adresse_de_votre_site/index.html

ou http://localhost

Vérifiez que le graphe s'affiche correctement.

Allez dans l'onglet paramètres et connectez-vous au bkoker mqqtt sur lequel sont envoyées les données provenant de votre arduino.

modifiez les topics MQTT dans le fichier mqttwss.js lignes 25 et 26.
valeur par défaut dans ce programme :

var topicPub1 = "FABLAB_21_22/STATION_METEO/PC/in/";
var topicSub1 = "FABLAB_21_22/STATION_METEO/PC/out/";

Pour l'accès sur le serveur MQTT il faut un identifiant et mot de passe :
login : fablab2122
mot de passe : 2122

Il faut aussi modifier le fichier mqttconnexion.js à partir de la ligne 18 dans la fonction onMessageArrived(r_message)
Adaptez cette fonction en fonction de votre json reçu de mqtt.
 
JS 
d3 js pour gérer les tableaus

	plotty design de graph

Serge Ouler